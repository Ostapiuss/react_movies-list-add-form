{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","hasimdbUrlError","hasimgUrlError","setValue","event","name","target","setState","value","testValid","currentURL","test","handleSubmit","preventDefault","props","onAdd","this","onSubmit","htmlFor","id","placeholder","onChange","required","type","classNames","Component","App","moviesFromServer","addMovie","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d32a1eac.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieCard.scss';\r\n\r\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          src={imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {description}\r\n        <br />\r\n        <a href={imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nMovieCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n\r\nMovieCard.defaultProps = {\r\n  description: '',\r\n};\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n\n    hasimdbUrlError: false,\n    hasimgUrlError: false,\n  };\n\n  setValue = (event) => {\n    const { name } = event.target;\n\n    this.setState({\n      [name]: event.target.value,\n    });\n  }\n\n  testValid = (currentURL) => {\n    // eslint-disable-next-line\n    const isValidURL = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    return isValidURL.test(currentURL);\n  };\n\n  handleSubmit = (event) => {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    event.preventDefault();\n\n    if (!this.testValid(imdbUrl) && !this.testValid(imgUrl)) {\n      this.setState({\n        hasimdbUrlError: true,\n        hasimgUrlError: true,\n      });\n\n      return;\n    }\n\n    if (!this.testValid(imgUrl)) {\n      this.setState({\n        hasimgUrlError: true,\n      });\n\n      return;\n    }\n\n    if (!this.testValid(imdbUrl)) {\n      this.setState({\n        hasimdbUrlError: true,\n      });\n\n      return;\n    }\n\n    this.props.onAdd({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    return (\n      <>\n        <h2 className=\"title\">\n          Add a movie\n        </h2>\n\n        <form\n          className=\"form\"\n          onSubmit={(event) => {\n            this.handleSubmit(event);\n          }}\n        >\n\n          <label htmlFor=\"title-movie\">\n            <input\n              name=\"title\"\n              className=\"form__input\"\n              id=\"title-movie\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={(event) => {\n                this.setValue(event);\n              }}\n              required\n            />\n          </label>\n          <br />\n          <label htmlFor=\"description-movie\">\n            <textarea\n              name=\"description\"\n              className=\"form__input description\"\n              type=\"text\"\n              id=\"description-movie\"\n              placeholder=\"Enter a description\"\n              value={description}\n              onChange={(event) => {\n                this.setValue(event);\n              }}\n            />\n          </label>\n          <br />\n\n          <label htmlFor=\"image-movie\">\n            {this.state.hasimgUrlError && (\n              <span className=\"error-font\">Please enter the imgURL</span>\n            )}\n            <input\n              name=\"imgUrl\"\n              className={classNames('form__input movie-image', {\n                'error-message': this.state.hasimgUrlError,\n              })}\n              id=\"movie-image\"\n              placeholder=\"Enter an image URL\"\n              value={imgUrl}\n              onChange={(event) => {\n                this.setValue(event);\n              }}\n              required\n            />\n          </label>\n          <br />\n          <label htmlFor=\"movie-imdb\">\n            {this.state.hasimgUrlError && (\n              <span className=\"error-font\">Please enter the imdbURL</span>\n            )}\n            <input\n              name=\"imdbUrl\"\n              className={classNames('form__input movie-imdb', {\n                'error-message': this.state.hasimdbUrlError,\n              })}\n              id=\"movie-imdb\"\n              placeholder=\"Enter IMDB URL\"\n              value={imdbUrl}\n              onChange={(event) => {\n                this.setValue(event);\n              }}\n              required\n            />\n          </label>\n          <br />\n          <label htmlFor=\"movie-imdb-id\">\n            <input\n              name=\"imdbId\"\n              className=\"form__input movie-imdb-id\"\n              id=\"movie-imdb-id\"\n              placeholder=\"Enter IMDB Id\"\n              value={imdbId}\n              onChange={(event) => {\n                this.setValue(event);\n              }}\n              required\n            />\n          </label>\n          <br />\n\n          <button\n            className=\"form__button\"\n            type=\"submit\"\n          >\n            Add movie\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            onAdd={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}